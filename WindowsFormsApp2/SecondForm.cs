using System.Windows.Forms;

namespace WindowsFormsApp2
{
    public partial class SecondForm : Form
    {
        // ВАЖНЫЙ МОМЕНТ! В свойстве элемента ListBox-а, необходимо в пункте "Разработка" выставить поле "Modifiers" на значение "public".

        // Если необходимо ПЕРЕДАТЬ параметры во вторую форму, то следует:

        // 1) Написать в конструкторе необходимые поля.
        public SecondForm(/* Писать здесь, например: string word */ string word)
        {
            // Этот метод называется конструктором класса.
            InitializeComponent();
            // Устанавливаем значение переменной КЛАССА "Word" равным значению переменной КОНСТРУКТОРА "word".
            Word = word;

            // Из основной формы передавать параметры также в КРУГЛЫХ скобках, например:
            // SecondForm form = new SecondForm("слово");
        }
        // 2) Создать свойство/поле/переменную, в которую необходимо поместить значение, переданное в конструктор.
        public string Word;

        // 3) Передать значение из конструктора в переменную.

        // В случае если значение переменной не используется, следует воспользоваться перегрузкой.
        // В любом классе формы есть "нулевой" конструктор, то есть конструктор БЕЗ параметров.
        // Например:
        public SecondForm()
        {
            // Тогда разрешаются одновременно две записи:
            // SecondForm form = new SecondForm("слово"); и
            // SecondForm form = new SecondForm();
            InitializeComponent();
        }

        private void WordListBox_SelectedIndexChanged(System.Object sender, System.EventArgs e)
        {
            // Здесь может и не быть метода-обработчика, но он должен быть в основной форме.
            MessageBox.Show(WordListBox.Text, "Вызов из второй формы!");
        }
        // Метод "WordListBox_SelectedIndexChanged" не является необходимым в данном случае, а нужен лишь для демонстрации вызова события из формы.
        // Здесь оставляем необходимые поля для работы второй формы.
    }
}
